#!/bin/bash

# --bfile This option specifies the base filename (SLK in this case) of the PLINK dataset that you want to perform QC on.
# --maf Variants with a MAF less than 0.01 will be excluded from the analysis.
# --hwe Variants with an HWE p-value less than 1e-6 (0.000001) will be excluded.
# --geno Variants with a genotyping rate less than 0.01 will be excluded.
# --mind Individuals with a genotyping rate less than 0.01 will be excluded.
# --write-snplist Generate a list of included variants and save it as SLK.QC.snplist.
# --make-just-fam Create a new .fam file that includes only the individuals who passed the QC filters.
# --out This specifies the base name for the output files generated by Plink, including SLK.QC.log, SLK.QC.fam, and SLK.QC.snplist.

../plink \
    --bfile SLK \
    --maf 0.01 \
    --hwe 1e-6 \
    --geno 0.01 \
    --mind 0.01 \
    --write-snplist \
    --make-just-fam \
    --memory 6144 \
    --out SLK.QC

# --keep Specifies a list of sample IDs to keep in the analysis. In this case, it's using the .fam file generated in the previous step (SLK.QC.fam) to retain only the individuals that passed the initial quality control.
# --extract Specifies a list of variants to extract from the dataset. It's using the .snplist generated in the initial QC step (SLK.QC.snplist) to retain only the variants that passed the initial QC filters.
# --indep-pairwise Variant pruning. It performs pairwise LD (Linkage Disequilibrium) analysis to identify a set of independent variants. The numbers 200, 50, and 0.25 are parameters for LD pruning. Specifically:
        # 200 specifies the window size for LD analysis (variants within this distance will be considered).
        # 50 specifies the step size for moving the window along the chromosome.
        # 0.25 specifies the r^2 threshold. Variants with an r^2 value (a measure of LD) greater than or equal to 0.25 will be pruned.
# --out This specifies the base name for the output files generated by Plink, including SLK.QC.prune.in and SLK.QC.prune.out. These files will contain the results of the LD-based variant pruning.

../plink \
    --bfile SLK \
    --keep SLK.QC.fam \
    --extract SLK.QC.snplist \
    --indep-pairwise 200 50 0.8 \
    --memory 6144 \
    --out SLK.QC
 
# --extract This option specifies a list of variants to include in the analysis. It's using the .prune.in file generated in the previous step (SLK.QC.prune.in) to retain only the pruned set of variants.
# --keep Specifies a list of sample IDs to keep in the analysis. In this case, it's using the .fam file generated in the initial QC step (SLK.QC.fam) to retain only the individuals that passed the initial quality control.
# --het Instructs Plink to calculate the heterozygosity rate (F coefficient) for each individual in the dataset. The F coefficient provides information about the deviation from Hardy-Weinberg equilibrium for each individual.
# --out Specifies the base name for the output files generated by Plink, including SLK.QC.het and SLK.QC.log. These files will contain the results of the heterozygosity rate calculations and associated logs.

../plink \
    --bfile SLK \
    --extract SLK.QC.prune.in \
    --keep SLK.QC.fam \
    --het \
    --memory 6144 \
    --out SLK.QC

# Remove Individuals with F coefficient > 3 standard deviation (SD) unit from the mean
Rscript - <<RSCRIPT
library(data.table)

# Read in file
dat <- fread("SLK.QC.het")

# Get samples with F coefficient within 3 SD of the population mean
valid <- dat[F <= mean(F) + 3 * sd(F) & F >= mean(F) - 3 * sd(F)]

# Print FID and IID for valid samples
fwrite(valid[, c("FID", "IID")], "SLK.valid.sample", sep = "\t")
RSCRIPT

# Remove mismatching SNPs, strand-flipping, and recoding alleles in the target data.
Rscript - <<RSCRIPT
library(data.table)
library(magrittr)

# Read in bim file
bim <- fread("SLK.bim") %>%
    setnames(., colnames(.), c("CHR", "SNP", "CM", "BP", "B.A1", "B.A2")) %>%
    .[,c("B.A1", "B.A2") := list(toupper(B.A1), toupper(B.A2))]

# Read in summary statistic data (require data.table v1.12.0+)
bmi <- fread("BMI_GWAS_QC.txt.gz") %>%
    .[,c("A1", "A2") := list(toupper(A1), toupper(A2))]

# Read in QCed SNPs
qc <- fread("SLK.QC.snplist", header = F)

# Merge summary statistic with target
info <- merge(bim, bmi, by = c("SNP", "CHR", "BP")) %>%
    .[SNP %in% qc[, V1]]

# Function for calculating the complementary allele
complement <- function(x) {
    switch (x,
        "A" = "T",
        "C" = "G",
        "T" = "A",
        "G" = "C",
        return(NA)
    )
}

# Get SNPs that have the same alleles across base and target
info.match <- info[A1 == B.A1 & A2 == B.A2, SNP]

# Identify SNPs that are complementary between base and target
com.snps <- info[sapply(B.A1, complement) == A1 &
                    sapply(B.A2, complement) == A2, SNP]

# Now update the bim file
bim[SNP %in% com.snps, c("B.A1", "B.A2") :=
        list(sapply(B.A1, complement),
            sapply(B.A2, complement))]

# Identify SNPs that need recoding
recode.snps <- info[B.A1 == A2 & B.A2 == A1, SNP]

# Update the bim file
bim[SNP %in% recode.snps, c("B.A1", "B.A2") :=
        list(B.A2, B.A1)]

# Identify SNPs that need recoding & complement
com.recode <- info[sapply(B.A1, complement) == A2 &
                    sapply(B.A2, complement) == A1, SNP]

# Now update the bim file
bim[SNP %in% com.recode, c("B.A1", "B.A2") :=
        list(sapply(B.A2, complement),
            sapply(B.A1, complement))]

# Write the updated bim file
fwrite(bim[, c("SNP", "B.A1")], "SLK.a1", col.names = F, sep = "\t")

# Identify SNPs that have different alleles in base and target
mismatch <- bim[!(SNP %in% info.match |
                    SNP %in% com.snps |
                    SNP %in% recode.snps |
                    SNP %in% com.recode), SNP]

write.table(mismatch, "SLK.mismatch", quote = F, row.names = F, col.names = F)
RSCRIPT

# --extract Specifies a list of variants to extract from the dataset. Typically, this is used after LD-based variant pruning to retain a subset of variants that passed quality control.
# --keep Specifies a list of sample IDs to keep in the analysis. Retain only the individuals that are considered valid based on some criteria (possibly after quality control steps).
# --rel-cutoff Sets a relatedness cutoff value. Identify and exclude individuals who are closely related to each other. In this case, individuals with a kinship coefficient greater than 0.125 will be removed from the analysis.

../plink \
    --bfile SLK \
    --extract SLK.QC.prune.in \
    --keep SLK.valid.sample \
    --rel-cutoff 0.125 \
    --memory 6144 \
    --out SLK.QC

# --make-bed Create a new binary PLINK dataset (BED/BIM/FAM) based on the operations specified in the script. The new dataset will be created with the prefix specified by --out.
# --keep Specifies a list of sample IDs to keep in the analysis, individuals who passed relatedness filtering.
# --extract Specifies a list of variants to extract from the dataset. This is often used after LD-based variant pruning to retain a subset of variants that passed quality control.
# --exclude Specifies a list of variants to exclude from the dataset. These variants likely have discrepancies or mismatches and are being removed.
# --a1-allele Specifies an alternate allele encoding file. It defines the coding of A1 alleles (usually minor alleles) for the variants in the dataset. This information is used in downstream analyses.

../plink \
    --bfile SLK \
    --make-bed \
    --keep SLK.QC.rel.id \
    --memory 6144 \
    --out SLK.QC \
    --extract SLK.QC.snplist \
    --exclude SLK.mismatch \
    --a1-allele SLK.a1
